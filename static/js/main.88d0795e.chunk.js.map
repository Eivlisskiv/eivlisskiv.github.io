{"version":3,"sources":["Other/math2.js","Drawing/canvas.js","Drawing/stars.js","Drawing/planet.js","Components/Image/index.jsx","Components/Space/SolarSystem/Planet/index.jsx","Components/Space/SolarSystem/index.jsx","Components/Space/index.jsx","Drawing/terminalbk.js","Components/Terminal/Controls/Button/index.jsx","Components/Terminal/Controls/index.jsx","Components/Terminal/HologramicBar/index.jsx","Components/PageContent/index.jsx","Components/Terminal/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["random","min","max","Math","randomElement","array","floor","this","length","Canvas","width","height","size","x","y","canvas","document","createElement","context","getContext","toDataURL","radius","arc","PI","Math2","require","Stars","starColors","background","stars","fillStyle","fillRect","spacing","position","sp","star","shadowBlur","shadowColor","beginPath","stroke","fill","colors","main","secondary","sizes","textures","Planet","core","planetTexture","image","color","Color","darken","toString","strokeStyle","save","closePath","restore","start","end","pos","color2","mix","globalCompositeOperation","circle","thickness","rotation","lineWidth","moveTo","lineTo","Image","props","state","style","src","alt","title","draggable","React","Component","planet","left","top","zIndex","SolarSystem","drawStars","planets","space","window","innerWidth","innerHeight","draw","setState","amount","i","drawPlanet","DrawnPlanet","map","data","index","Space","className","children","TerminalBackground","lighten","fade","opaquer","desaturate","Button","margin","horizontal","onPress","selected","buttonStyle","onClick","buttons","Controls","options","border","percent","backgroundColor","flexDirection","borderWidth","borderRadius","s","borderColor","borderStyle","display","justifyContent","name","HologramicBar","PageContent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88d0795e.chunk.js","sourcesContent":["\r\nexport function random(min, max){\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function randomElement(array){\r\n    return array[Math.floor(this.random(0, array.length))]\r\n}","\r\n\r\nexport default class Canvas{\r\n\r\n    constructor(width, height){\r\n        this.size = {\r\n            x:width,\r\n            y:height\r\n        }\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n    }\r\n\r\n    draw(){\r\n        return this.canvas.toDataURL(\"image/png\")\r\n    }\r\n\r\n    circle(x, y, radius){\r\n        this.context.arc(x, y, radius, 0, 2 * Math.PI);\r\n    }\r\n}","import Canvas from \"./canvas\"\r\nconst Math2 = require(\"../Other/math2\")\r\n\r\nexport default class Stars extends Canvas{\r\n\r\n    starColors = [ \"white\", \"blue\", \"red\", \"orange\" ]\r\n\r\n    constructor(width, height){\r\n        super(width, height);\r\n    }\r\n    \r\n    draw(){\r\n        this.background();\r\n        this.stars(100);\r\n\r\n        return super.draw();\r\n    }\r\n\r\n    background(){\r\n        this.context.fillStyle = 'black';\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height); \r\n    }\r\n\r\n    stars(spacing){\r\n        const position = { x:0, y:0 }\r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        const sp = spacing * 2;\r\n        while(position.y < height){\r\n            while(position.x < width){\r\n                this.star(Math2.random(1, 5), \r\n                position.x + Math2.random(-spacing, spacing), \r\n                position.y + Math2.random(-spacing, spacing))\r\n                \r\n                position.x += Math2.random(spacing, sp)\r\n            }\r\n            position.y += Math2.random(spacing, sp)\r\n            position.x = 0;\r\n        }\r\n    }\r\n\r\n    star(radius, x, y){\r\n        this.context.fillStyle = 'white';\r\n        this.context.shadowBlur = radius + 5;\r\n        this.context.shadowColor = Math2.randomElement(this.starColors);\r\n\r\n        this.context.beginPath();\r\n        this.context.arc(x, y, radius, 0, 2 * Math.PI);\r\n        this.context.stroke(); \r\n        this.context.fill();\r\n    }\r\n}","import Canvas from \"./canvas\"\r\nimport * as Math2 from \"../Other/math2\"\r\nimport Color from \"color\"\r\n\r\nconst colors = [\r\n    { main: \"green\", secondary : [ \"blue\", \"orange\", \"red\", \"brown\", \"white\" ] },\r\n    { main: \"blue\", secondary : [ \"green\", \"orange\", \"red\", \"brown\", \"white\" ] },\r\n    { main: \"orange\", secondary : [ \"green\", \"blue\", \"red\", \"brown\", \"white\" ] },\r\n    { main: \"brown\", secondary : [ \"green\", \"blue\", \"orange\", \"red\", \"white\" ] },\r\n    { main: \"red\", secondary : [ \"green\", \"blue\", \"orange\", \"brown\", \"white\" ] },\r\n    { main: \"white\", secondary : [ \"green\", \"blue\", \"orange\", \"red\", \"brown\" ] },\r\n]\r\n    \r\nconst sizes ={\r\n    min: 20,\r\n    max: 100\r\n}\r\n\r\nconst textures = [\r\n    \"craters\", \"lines\"\r\n]\r\n\r\nexport default class Planet extends Canvas {\r\n\r\n    constructor(){\r\n        const size = Math2.random(sizes.min, sizes.max);\r\n        super(size * 4, size * 4);\r\n\r\n        this.radius = size;\r\n\r\n        this.position = { \r\n            x: size * 2,\r\n            y: size * 2,\r\n        }\r\n\r\n        this.colors = Math2.randomElement(colors);\r\n\r\n    }\r\n\r\n    draw(){\r\n        this.core()\r\n        this.planetTexture()\r\n\r\n        return {\r\n            image: super.draw(),\r\n            radius: this.radius,\r\n        }\r\n    }\r\n\r\n    core(){\r\n\r\n        let color = Color(this.colors.main);\r\n        color = color.darken(Math2.random(0.2, 0.8))\r\n\r\n        this.context.fillStyle = color.toString();\r\n        this.context.strokeStyle = 'transparent';\r\n        this.context.shadowBlur = 10;\r\n        this.context.shadowColor = colors.toString();\r\n\r\n        this.context.save();\r\n\r\n        this.context.beginPath();\r\n        this.context.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\r\n        this.context.fill();\r\n        this.context.stroke();\r\n        this.context.closePath();\r\n\r\n        this.context.restore();\r\n    }\r\n\r\n    planetTexture(){\r\n\r\n        const start = { \r\n            x: this.position.x - this.radius,\r\n            y: this.position.y - this.radius,\r\n        }\r\n\r\n        const end = {\r\n            x: start.x + (this.radius * 2),\r\n            y: start.y + (this.radius * 2),\r\n        }\r\n\r\n        this.context.save();\r\n        this[`${Math2.randomElement(textures)}_Texture`](start, end);\r\n        this.context.restore();\r\n    }\r\n\r\n    craters_Texture(start, end){\r\n        const spacing = this.radius / 2;\r\n        const pos = { x:start.x, y:start.y };\r\n\r\n        const color2 = Color(Math2.randomElement(this.colors.secondary));\r\n        const color = Color(this.colors.main).mix(color2, Math2.random(0.2, 0.5)).darken(0.6)\r\n\r\n        this.context.globalCompositeOperation = \"source-atop\";\r\n\r\n        while(pos.y < end.y){\r\n\r\n            while(pos.x < end.x){   \r\n                const size = Math2.random(this.radius / 8, this.radius / 2);\r\n                this.context.fillStyle = color;\r\n                this.context.shadowBlur = size / 4;\r\n                this.context.shadowColor = color;\r\n        \r\n                this.context.beginPath();\r\n                this.circle(pos.x, \r\n                    pos.y + Math2.random(-spacing, spacing), \r\n                    size);\r\n                \r\n                this.context.fill();\r\n\r\n                pos.x += Math2.random(spacing, spacing * 2);\r\n            }\r\n\r\n            pos.y += Math2.random(spacing, spacing * 2);\r\n            pos.x = start.x;\r\n        }\r\n    }\r\n\r\n    lines_Texture(start, end){\r\n        let pos = start.y;\r\n        this.context.globalCompositeOperation = \"source-atop\";\r\n        const rotation = Math2.random(-this.radius, this.radius);\r\n        let thickness;\r\n        while(pos < end.y){\r\n \r\n            const color2 = Color(Math2.randomElement(this.colors.secondary));\r\n            const color = Color(this.colors.main).mix(color2, Math2.random(0.2, 0.5));\r\n\r\n            this.context.strokeStyle = color;\r\n\r\n            thickness = Math2.random(1, 5);\r\n            this.context.lineWidth = thickness\r\n\r\n            this.context.beginPath();\r\n            this.context.moveTo(start.x, pos + rotation)\r\n            this.context.lineTo(end.x, pos - rotation);\r\n            this.context.closePath();\r\n            this.context.stroke();\r\n            \r\n\r\n            pos += thickness;\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nexport default class Image extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            x: this.props.x || 0,\r\n            y: this.props.y || 0,\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.image) return null;\r\n        return ( <img \r\n            style={this.props.style}\r\n            src={this.props.image} alt={this.props.title || \"Unamed\"} draggable={false}\r\n            /> )\r\n    }\r\n}","import React from \"react\";\r\nimport Image from \"../../../Image\";\r\n//import \"./style.css\"\r\n\r\nexport default class Planet extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const radius = this.props.planet.radius;\r\n\r\n        this.state = {\r\n            image: this.props.planet.image,\r\n            radius: radius,\r\n            x: (this.props.x - radius) || 0,\r\n            y: (this.props.y - radius) || 0,\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n        <>\r\n            <Image \r\n                style={{position:\"absolute\", left:this.state.x, top:this.state.y, zIndex: 1}}\r\n                image={this.state.image} />\r\n        </>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n//import * as style from \"./style.css\"\r\n\r\nimport * as Math2 from \"../../../Other/math2\"\r\nimport Stars from \"../../../Drawing/stars\";\r\nimport DrawnPlanet from \"../../../Drawing/planet\";\r\nimport Planet from \"./Planet\"\r\nimport Image from \"../../Image\";\r\n\r\nexport default class SolarSystem extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.state.stars) \r\n            this.drawStars();\r\n        \r\n        if(!this.state.planets){\r\n            //this.drawPlanets()\r\n        }\r\n        \r\n    }\r\n\r\n    async drawStars(){\r\n        const space = new Stars(window.innerWidth * 2, window.innerHeight * 2);\r\n        const image = space.draw();\r\n        this.setState({stars: image});\r\n    }\r\n\r\n    async drawPlanets(){\r\n        const amount = Math.floor(Math2.random(5, 10));\r\n        let planets = [];\r\n        for(let i = 0; i < amount; i++)\r\n            planets[i] = this.drawPlanet();\r\n        this.setState({planets})\r\n    }\r\n\r\n    drawPlanet(){\r\n        const planet = new DrawnPlanet()\r\n        return planet.draw();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <>\r\n            <Image image={this.state.stars} title=\"Space and Stars\"/>\r\n            {this.state?.planets?.map((data, index) => \r\n                <Planet key={index} planet={data} \r\n                    x={Math2.random(100, window.innerWidth * 0.9)}\r\n                    y={Math2.random(100, window.innerHeight * 0.9)}\r\n                />\r\n            )} \r\n            \r\n        </>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nimport SolarSystem from \"./SolarSystem\"\r\n\r\nexport default class Space extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <SolarSystem/>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import Canvas from \"./canvas\"\r\nimport Color from \"color\"\r\n\r\nexport default class TerminalBackground extends Canvas {\r\n\r\n    constructor(x, y){\r\n        super(x, y);\r\n    }\r\n    \r\n    draw(){\r\n        const spacing = 5;\r\n        \r\n        this.context.lineWidth = 3;\r\n        this.context.strokeStyle = Color(\"green\").lighten(0.5).fade(0.5).opaquer(-0.6);\r\n\r\n        this.context.fillStyle = Color(\"green\").lighten(0.5).desaturate(1).opaquer(-0.5);\r\n        this.context.beginPath();\r\n        this.context.fillRect(0, 0, this.size.x, this.size.y)\r\n\r\n        for(let y = 0; y < this.size.y; y += spacing){\r\n            this.context.beginPath()\r\n            this.context.moveTo(0, y);\r\n            this.context.lineTo(this.size.x, y);\r\n            this.context.stroke();\r\n            this.context.closePath();\r\n        }\r\n\r\n        return super.draw();\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport default class Button extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    buttonStyle(){\r\n        const h = this.props.horizontal;\r\n        return {\r\n            margin: h ? \"8px 0px\" : \"0px 8px\",\r\n        }\r\n    }\r\n\r\n    onPress(){\r\n        if(this.props.onPress)\r\n            this.props.onPress();\r\n            \r\n        this.setState({selected: !this.state.selected})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <button className={`button ${this.state.selected ? \"\" : \"un\"}selected`}\r\n                style={this.buttonStyle()}\r\n                onClick={() => this.onPress()}>\r\n                {this.props.title}\r\n        </button>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nimport Color from \"color\"\r\nimport Button from \"./Button\";\r\n\r\nconst buttons = [ \"Test 1\", \"Test 2\", \"Test 3\", \"Test 4\", \"Tedt 5\" ]\r\n\r\nexport default class Controls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = this.props.options;\r\n    }\r\n\r\n\r\n    borderStyle(){\r\n        const border = 10 * this.state.percent;\r\n        const h = this.state.horizontal;\r\n        return {\r\n            backgroundColor: \"#232925\",\r\n            flexDirection: !h ? \"row\" : \"column\",\r\n            borderWidth: border,\r\n            borderRadius: this.state.size.s / 30,\r\n            borderColor: Color(\"#484E4B\").lighten(0.3)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"controls_border\" style={this.borderStyle()}>\r\n            <div style={{display:\"flex\", flexDirection: !this.state.horizontal ? \"row\" : \"column\", justifyContent:\"space-evenly\"}}>\r\n                {buttons.map((name, i) => <Button key={i} horizontal={this.state.horizontal} title={name} /> )}\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport default class HologramicBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n        <>\r\n            {this.props.children}\r\n        </>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport default class PageContent extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"pageContent\">\r\n            <div className=\"pageContent_inner blur\">\r\n                \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nimport Color from \"color\"\r\nimport TerminalBackground from \"../../Drawing/terminalbk\";\r\n\r\nimport Controls from \"./Controls\"\r\nimport HologramicBar from \"./HologramicBar\";\r\n\r\nexport default class Terminal extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const percent = 0.99;\r\n        const size = Math.min(window.innerWidth, window.innerHeight) * percent;\r\n        this.state = {\r\n            percent,\r\n            size: {\r\n                s: size,\r\n                x: size * 1.1,\r\n                y: size * 0.9\r\n            },\r\n            horizontal: window.innerWidth >= window.innerHeight,\r\n        };\r\n        this.state.terminalbk = this.getTerminalBk()\r\n    }\r\n\r\n    borderStyle(){\r\n        const border = 10 * this.state.percent;\r\n        const size = this.state.size.s;\r\n        console.log(size);\r\n        return {\r\n            backgroundImage: this.grad(Color(\"#232925\")),\r\n\r\n            flexDirection: \"column\",\r\n\r\n            width: this.state.size.x,\r\n            height: this.state.size.y,\r\n            borderWidth: border,\r\n            borderRadius: size / 8,\r\n            borderColor: Color(\"#484E4B\").lighten(0.3),\r\n            margin: 5,\r\n        }\r\n    }\r\n\r\n    innerStyle(percent = 85, color = \"blue\", lighten = 0.3, borderWidth = 0, radius = 10){\r\n        const cColor = Color(color);\r\n        const style = {\r\n            width: `${percent}%`,\r\n            height: `${percent * 0.95}%`,\r\n            backgroundImage: this.grad(cColor),\r\n        }\r\n\r\n        if(borderWidth >= 0){\r\n            style.borderColor = cColor.lighten(lighten)\r\n            //style.borderImage = this.grad(cColor.lighten(lighten));\r\n            style.borderStyle = \"solid\";\r\n            style.borderWidth = borderWidth;\r\n            style.borderRadius = radius;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    grad(color){\r\n        return `linear-gradient(to top left, ${color.lighten(0.2)}, ${color.darken(0.6)})`\r\n    }\r\n\r\n    getTerminalBk(){\r\n        try{\r\n            const terminalbk = new TerminalBackground(this.state.size.x, this.state.size.y);\r\n            const img = terminalbk.draw();\r\n            return img;\r\n        }catch(e){\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        //width:this.state.size.x, height:this.state.size.y\r\n        return (\r\n        <div className=\"main\">\r\n            <div className=\"container\" style={{flexDirection: \r\n                (!this.state.horizontal ? \"column\" : \"row\") }}>\r\n                {this.state.horizontal ? <Controls options={this.state} /> : null}\r\n                <div className=\"center border\" style={this.borderStyle()}>\r\n                    <label className=\"name\">Maxime Gautier</label>\r\n                    <div  className=\"center\" style={this.innerStyle(95, \"#484E4B\", 0.3, 8, this.state.size.s / 8)}>\r\n                        <div  className=\"center\" style={this.innerStyle(97, \"green\", -0.3, 1, this.state.size.s / 5)}>\r\n                            <label style={{position:\"fixed\", zIndex:0, width:\"90%\"}}>\r\n                            Banana, Orange, Cream, Sunset, Your mom, I love them all equally. Some text some text\r\n                            some text some text some text some textsome textsome textsome text  some text some text \r\n                            some text some text some text some text some text some text some text some text some text \r\n                            some text some text some text some text some text some text some text some text some text\r\n                            </label>\r\n\r\n                            <img style={{zIndex:1}} src={this.state.terminalbk} />\r\n                            <HologramicBar />\r\n                            <label>Banana</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {!this.state.horizontal ? <Controls options={this.state}/> : null}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import Space from './Components/Space';\nimport Terminal from \"./Components/Terminal\"\nimport './App.css';\nimport PageContent from './Components/PageContent';\n\nfunction App() {\n  return (\n    <>\n    <Space />\n    <PageContent />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}